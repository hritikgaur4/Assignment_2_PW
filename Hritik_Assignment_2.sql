use mavenmovies;

-- Q.1 Retrieve the total number of rentals made in the Sakila database. 
select count(rental_id) as total_rental from rental;

-- Q.2 Find the average rental duration (in days) of movies rented from the Sakila database.
select avg(datediff(return_date, rental_date)) as avg_rental_duration from rental;

-- Q.3 Display the first name and last name of customers in uppercase. 
select upper(first_name) , upper(last_name) from customer;

-- Q.4 Extract the month from the rental date and display it alongside the rental ID. 
select rental_id, month(rental_date) from rental;

-- Q.5 Retrieve the count of rentals for each customer (display customer ID and the count of rentals). 
select customer_id , count(rental_id) as count_of_rental from rental group by customer_id;

-- Q.6 Find the total revenue generated by each store. 
select
 s.store_id, sum(p.amount) as total_revenue
from store s
join
 staff st on s.store_id = st.store_id
join
 payment p on st.staff_id = p.staff_id
group by
 s.store_id;


-- Q.7 Display the title of the movie, customer s first name, and last name who rented it. 
select f.title as movie_title, c.first_name, c.last_name
from 
 film f 
join
 inventory i on f.film_id = i.film_id 
join
 rental r on i.inventory_id = r.inventory_id 
join
 customer c on r.customer_id= c.customer_id;  
 
-- Q.8 Retrieve the names of all actors who have appeared in the film "Gone with the Wind."
select * from film where title = "Gone with the Wind";
-- Note No movie shown in this table 

-- Q.9 Determine the total number of rentals for each category of movies.
select
 c.name as movie_category, count(r.rental_id) as total_rental
from
 category c
join
 film_category fc on c.category_id = fc.category_id 
join
 inventory i on fc.film_id = i.film_id
join
 rental r on i.inventory_id = r.inventory_id
group by 
 fc.category_id;
 
 -- Q.10 Find the average rental rate of movies in each language.
 select 
 l.name,  avg(f.rental_rate) as rental_rate
from 
 film f
right join 
 language l on f.language_id = l.language_id
 group by 
 l.language_id; 

-- Q.11 Retrieve the customer names along with the total amount they've spent on rentals.
select
 concat(c.first_name, " ", c.last_name) as name , sum(p.amount) 
from
 customer c
join 
 payment p on c.customer_id = p.customer_id
join
 rental r on p.rental_id = r.rental_id
 group by 
 c.customer_id;
 
-- Q.12 List the titles of movies rented by each customer in a particular city (e.g., 'London').
select
 c.first_name, c.last_name, f.title as rented_movie_title
from
 customer c
join
 address a on c.address_id = a.address_id
join
 city ci on a.city_id = ci.city_id
join
 rental r on c.customer_id = r.customer_id
join
 inventory i on r.inventory_id = i.inventory_id
join
 film f on i.film_id = f.film_id
where ci.city = 'London'
order by
 c.first_name, c.last_name, f.title;
 
 -- Q.13 Display the top 5 rented movies along with the number of times they've been rented. 
select f.title as movie_title, count(*) as rentel_count
from film f
join inventory i on f.film_id = i.film_id
join
 rental r on i.inventory_id = r.inventory_id
group by
 f.title
order by
 rentel_count desc
limit 5;

-- Q.14 Determine the customers who have rented movies from both stores (store ID 1 and store ID 2).
select
 c.customer_id, c.first_name, c.last_name
from
 customer c
join
 rental r on c.customer_id = r.customer_id
join
 inventory i on r.inventory_id = i.inventory_id
Join store s on i.store_id = s.store_id
where
 s.store_id in (1, 2)
group by
 c.customer_id, c.first_name, c.last_name
having
 count(distinct s.store_id) = 2;